// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PCT.Save
{

using global::System;
using global::FlatBuffers;

public struct Vec2 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec2 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }

  public static Offset<PCT.Save.Vec2> CreateVec2(FlatBufferBuilder builder, float X, float Y) {
    builder.Prep(4, 8);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<PCT.Save.Vec2>(builder.Offset);
  }
};

public struct Vec3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }

  public static Offset<PCT.Save.Vec3> CreateVec3(FlatBufferBuilder builder, float X, float Y, float Z) {
    builder.Prep(4, 12);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<PCT.Save.Vec3>(builder.Offset);
  }
};

public struct Vec4 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec4 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float W { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }

  public static Offset<PCT.Save.Vec4> CreateVec4(FlatBufferBuilder builder, float W, float X, float Y, float Z) {
    builder.Prep(4, 16);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    builder.PutFloat(W);
    return new Offset<PCT.Save.Vec4>(builder.Offset);
  }
};


}
